// Assurez-vous de ne pas avoir de duplicata pour le générateur "client"
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
  @@map("accounts")
}
 
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@map("sessions")
}
 
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  isPremium     Boolean         @default(false)
  updatedAt     DateTime        @updatedAt
  accounts      Account[]
  sessions      Session[]
  products      UserProduct[]
 
  @@map("users")
}
 
model VerificationToken {
  identifier String
  token      String
  expires    DateTime
 
  @@unique([identifier, token])
  @@map("verificationtokens")
}


model Product {
  id            Int             @id @default(autoincrement())
  name          String
  url           String
  imageUrl      String?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  priceHistory  PriceHistory[]
  users         UserProduct[]
}

model UserProduct {
  id            Int             @id @default(autoincrement())
  userId        String
  productId     Int
  isActive      Boolean         @default(true)
  createdAt     DateTime        @default(now())
  user          User            @relation(fields: [userId], references: [id])
  product       Product         @relation(fields: [productId], references: [id])
  @@unique([userId, productId])
}

model PriceHistory {
  id            Int             @id @default(autoincrement())
  productId     Int
  price         Float
  date          DateTime        @default(now())
  product       Product         @relation(fields: [productId], references: [id])
}

